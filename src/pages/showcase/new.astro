---
import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro'
import { LibsqlError } from '@libsql/client'

import Form from '../../components/Form.astro'
import type { FormErrors } from '../../components/FormErrorCard.astro'
import FormField from '../../components/FormField.astro'
import { addShowcaseEntrySchema } from '../../libs/schema'
import { addShowcaseEntry } from '../../libs/showcase'

export const prerender = false

if (!Astro.locals.user) {
  return Astro.redirect('/showcase/login/')
}

const formErrors: FormErrors = {}

if (Astro.request.method === 'POST') {
  try {
    const data = await Astro.request.formData()
    const parsedNewEntry = await addShowcaseEntrySchema.safeParseAsync(data)

    if (parsedNewEntry.success) {
      await addShowcaseEntry(
        Astro.locals.user,
        parsedNewEntry.data.url,
        parsedNewEntry.data.name,
        parsedNewEntry.data.image,
      )

      return Astro.redirect('/showcase/dashboard/')
    } else {
      const errors = Object.fromEntries(Object.entries(parsedNewEntry.error.flatten().fieldErrors))

      for (const field of ['url', 'name', 'image']) {
        const value = data.get(field)
        formErrors[field] = { messages: errors[field], value: typeof value === 'string' ? value : undefined }
      }
    }
  } catch (error) {
    let message = 'Something went wrong. Please try again later.'

    if (error instanceof LibsqlError && error.code === 'SQLITE_CONSTRAINT_UNIQUE') {
      message = 'This showcase entry already exists.'
    } else {
      console.error('Failed to submit new showcase entry', error)
    }

    formErrors['submit'] = { messages: [message] }
  }
}
---

<StarlightPage frontmatter={{ title: '// TODO(HiDeoo) ', tableOfContents: false }}>
  <Form enctype="multipart/form-data" error={formErrors.submit} method="post">
    <FormField error={formErrors.url} label="URL" name="url" placeholder="// TODO(HiDeoo) " required type="url" />
    <FormField error={formErrors.name} label="Name" name="name" placeholder="// TODO(HiDeoo) " required type="text" />
    <FormField error={formErrors.image} label="Image" name="image" required type="file" />
    <button type="submit">Submit</button>
  </Form>
</StarlightPage>
